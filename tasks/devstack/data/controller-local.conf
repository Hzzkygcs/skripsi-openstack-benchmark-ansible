[[local|localrc]]

HOST_IP={{ ip_address_1 }}
FIXED_RANGE=10.4.128.0/20
# PUBLIC_INTERFACE=veth_inside
FLOATING_RANGE={{ devstack_floating_ip_range }}

# PUBLIC_NETWORK_GATEWAY={{ gateway }}
LOGFILE=/opt/stack/logs/stack.sh.log

disable_service horizon

ADMIN_PASSWORD={{ admin_password }}
DATABASE_PASSWORD={{ admin_password }}
RABBIT_PASSWORD={{ admin_password }}
SERVICE_PASSWORD={{ admin_password }}

SWIFT_HASH={{ admin_password }}
SWIFT_TEMPURL_KEY={{ admin_password }}

disable_service etcd3

# In Kuryr, KURYR_CAPABILITY_SCOPE is local by default,
# but we must change it to global in the multinode scenario.
KURYR_CAPABILITY_SCOPE=global
KURYR_PROCESS_EXTERNAL_CONNECTIVITY=False
enable_plugin kuryr-libnetwork https://opendev.org/openstack/kuryr-libnetwork 

#This below plugin enables installation of container engine on Devstack.
#The default container engine is Docker
ENABLE_CONTAINERD_CRI=True
enable_plugin zun https://opendev.org/openstack/zun 
enable_plugin zun-tempest-plugin https://opendev.org/openstack/zun-tempest-plugin
enable_plugin devstack-plugin-container https://opendev.org/openstack/devstack-plugin-container 
enable_plugin zun-ui https://opendev.org/openstack/zun-ui

# install python-zunclient from git
LIBS_FROM_GIT="python-zunclient"

# IRONIC CONFIG #################################################################
# Enable Ironic plugin
enable_plugin ironic https://opendev.org/openstack/ironic stable/2023.2

# Configure networking by disabling OVN and enabling Neutron w/OVS.
disable_service ovn-controller ovn-northd q-ovn-metadata-agent
disable_service ovn-northd
enable_service q-agt q-dhcp q-l3 q-svc q-meta
Q_AGENT=openvswitch
Q_ML2_PLUGIN_MECHANISM_DRIVERS="openvswitch"
Q_ML2_TENANT_NETWORK_TYPE="vxlan"
Q_USE_SECGROUP="False"

# Enable Swift for the direct deploy interface.
enable_service s-proxy s-object s-container s-account

# Swift temp URL's are required for the direct deploy interface
SWIFT_ENABLE_TEMPURLS=True

# If you wish to change the default driver for nodes created by devstack,
# you can do so by setting IRONIC_DEPLOY_DRIVER to the name of the driver
# you wish used by default, and ensuring that driver (along with others) is
# enabled.
IRONIC_DEPLOY_DRIVER=ipmi

IRONIC_VM_COUNT=0opens
IRONIC_BAREMETAL_BASIC_OPS=True
DEFAULT_INSTANCE_TYPE=baremetal

# The parameters below represent the minimum possible values to create
# functional nodes.
IRONIC_VM_SPECS_RAM=2048
IRONIC_VM_SPECS_DISK=10

# Size of the ephemeral partition in GB. Use 0 for no ephemeral partition.
IRONIC_VM_EPHEMERAL_DISK=0

# To build your own IPA ramdisk from source, set this to True
IRONIC_BUILD_DEPLOY_RAMDISK=False

VIRT_DRIVER=ironic
IRONIC_VM_LOG_DIR=/opt/stack/logs/ironic-bm-logs

# END OF IRONIC CONFIG ###########################################################