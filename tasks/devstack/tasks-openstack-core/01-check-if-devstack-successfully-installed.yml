- set_fact:
    devstack_installation_log_file: "/opt/stack/logs/stack.sh.log"
- name: Check that the DevStack's log exists
  stat:
    path: "{{ devstack_installation_log_file }}"
  register: stat_result
- set_fact:
    devstack_logfile_exists: "{{ stat_result.stat.exists }}"

- name: Check if devstack already installed successfully based on the log file (1)
  lineinfile:
    dest: "{{ devstack_installation_log_file }}"
    line: "DevStack Component Timing"  # must be **whole** one line, not substring.
  check_mode: yes
  register: presence
  when: "devstack_logfile_exists"
- name: Check if devstack already installed successfully based on the log file (2)
  lineinfile:
    dest: "{{ devstack_installation_log_file }}"
    line: "Services are running under systemd unit files."  # must be **whole** one line
  check_mode: yes
  register: presence2
  when: "devstack_logfile_exists"
- name: Check if devstack already installed successfully based on systemctl
  shell: >-
    systemctl --state=running | grep devstack@ | wc -l
  register: systemctl_grep_line_count
- set_fact:  # set true iif (log-file exists and those lines exists)
    devstack_already_installed_successfully: >-
      {{ devstack_logfile_exists and (not presence.changed) and (not presence2.changed) and (systemctl_grep_line_count.stdout != "0") 
      and not force_reinstall }}
- debug:
    var: devstack_already_installed_successfully