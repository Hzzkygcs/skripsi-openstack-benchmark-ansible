- name: copy admin-openrc.sh to server
  template:
    src: ../data/admin-openrc.sh
    dest: "{{base_path}}/admin-openrc.sh"
    mode: 0777
- name: finalization
  when: is_controller
  block:
    - set_fact:
        admin_password_cmd_arg: "\"{{ admin_password }}\""
    - set_fact:
        source_admin_openrc_cmd: >-
          . "{{base_path}}/admin-openrc.sh" {{ admin_password_cmd_arg }} && export OS_PASSWORD={{ admin_password_cmd_arg }} &&
        os_password_flag: "--os-password {{ admin_password_cmd_arg }}"
    - name: "Register public key to OpenStack"
      shell: >-
        sudo bash -c '{{ source_admin_openrc_cmd }} openstack keypair create --public "{{ ssh_key_destination_path }}.pub" created_by_ansible'
      register: result
      failed_when: "result.rc != 0 and 'already exists' not in result.stderr"
      changed_when: "'already exists' not in result.stderr"
    - name: get controller hostname
      command: "hostname"
      register: controller_host_name
      failed_when: "controller_host_name.rc != 0 or (controller_host_name.stdout | length | int == 0)"
    - debug:
        var: controller_host_name.stdout
    - set_fact:
        controller_host_name: "{{ controller_host_name.stdout }}"
    - name: disable Nova from controller-node
      shell: >-
        {{ source_admin_openrc_cmd }} openstack compute service set --disable "{{ controller_host_name }}" nova-compute
    - name: disable Cinder from controller-node
      shell: >-
        {{ source_admin_openrc_cmd }} openstack volume service set --disable "{{ controller_host_name }}@lvmdriver-1" 
        cinder-volume

    - name: fetch information about where Nova was installed
      shell: "{{ source_admin_openrc_cmd }}  openstack compute service list -f json {{ os_password_flag }}"
      register: nodes_with_nova_installed
    - set_fact:
        nodes_with_nova_installed: "{{ nodes_with_nova_installed.stdout }}"
    - debug:
        var: nodes_with_nova_installed


    # Prevent error Host 'COMPUTE_NODE_HOST' is not mapped to any cell
    # by https://github.com/reachsrirams/openstack-scripts/issues/28
    - name: "nova-manage cell_v2 discover_hosts"
      shell: "{{ source_admin_openrc_cmd }} nova-manage cell_v2 discover_hosts --verbose"
#    - debug:
#        msg: "{{ source_admin_openrc_cmd }} openstack security group list --project 1ec5bc8e6e2e4e059ad8bf70c3290f6c --format json"
    - name: "get project-ID"
      shell: >-
        {{ source_admin_openrc_cmd }} openstack project show -c id -f value "{{ OS_PROJECT_NAME }}"
      register: project_id
    - name: "get security-group ID"
      shell: "{{ source_admin_openrc_cmd }} openstack security group list --project {{ project_id.stdout }} --format json"
      register: security_group_ids
    - set_fact:
        security_group_ids: "{{ security_group_ids.stdout }}"
        cacheable: yes  # not variable, it's an argument
    - set_fact:
        security_group_ids: "{{ security_group_ids | selectattr('Name', 'equalto', 'default')  }}"
        cacheable: yes  # not variable, it's an argument
    - set_fact:
        security_group_ids: "{{ security_group_ids | map(attribute='ID')  }}"
        cacheable: yes  # not variable, it's an argument

    - debug:
        var: security_group_ids

    - loop: "{{ security_group_ids if (security_group_ids | type_debug) == 'list' else [] }}"
      include_tasks: ./allow-icmp-tcp-udp-to-security-group.yml


    - name: "Add 8.8.8.8 and 8.8.4.4 to OpenStack's DHCP server as the default DNS server"
      shell: "{{ source_admin_openrc_cmd }} openstack subnet set --dns-nameserver 8.8.8.8 --dns-nameserver 8.8.4.4 private-subnet"
      register: rule_creation
      failed_when: "rule_creation.rc != 0 and 'Duplicate nameserver' not in rule_creation.stderr"
      changed_when: "'Duplicate nameserver' not in rule_creation.stderr"

    - name: "Add 8.8.8.8 and 8.8.4.4 to OpenStack's DHCP server as the default DNS server"
      shell: "{{ source_admin_openrc_cmd }} openstack subnet set --dns-nameserver 8.8.8.8 --dns-nameserver 8.8.4.4 public-subnet"
      register: rule_creation
      failed_when: "rule_creation.rc != 0 and 'Duplicate nameserver' not in rule_creation.stderr"
      changed_when: "'Duplicate nameserver' not in rule_creation.stderr"

- name: "install helpful debugging packages"
  become: true
  become_user: root
  apt:
    update_cache: yes
    name:
      - net-tools
      - bridge-utils

- name: "Increase MTU to enable SSH through Floating IP"
  command: "sudo ifconfig {{ interface_1 }} mtu 1700"
  become: true
  become_user: root