- name: Set namd phoronix base directory  # specific for running phoronix as root  (become: true)
  set_fact:
    namd_test_folder: '/var/lib/phoronix-test-suite/installed-tests/pts/{{ namd_version }}'

- set_fact:
    install_phoronix_namd_additional_env: ""

- when: "use_namd_github_mirror"
  block:
    - name: "Waiting for NAMD mirror to be downloaded successfully"
      async_status:
        jid: "{{ async_download_ubuntu_image.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 4000
      delay: 1
    - name: Extract NAMD mirror
      unarchive:
        src: "{{ namd_github_mirror_location }}"
        dest: "{{ namd_downloaded_mirror_cache_folder }}"
        remote_src: yes
    - set_fact:
        install_phoronix_namd_additional_env: >-
          DOWNLOAD_CACHE="{{ namd_downloaded_mirror_cache_folder }}"


- name: install phoronix namd-cuda
  command: "env DISPLAY=:0 {{install_phoronix_namd_additional_env}} ./phoronix-test-suite install {{ namd_version }} 2>&1"
  become: true
  args:
    chdir: "{{ phoronix_folder }}"
  register: namd_cuda_install_result
  retries: 10
  delay: 5
  until: "namd_cuda_install_result is not failed or 'downloading of needed test files failed' in namd_cuda_install_result.stdout.lower()"

- set_fact:
    cleaned_namd_cuda_install_result: "{{ namd_cuda_install_result.stdout | regex_replace('\x1B\\[[0-9;]*[mK]', '') }}"
- name: write namd-cuda install logs
  delegate_to: localhost
  copy:
    content: "{{ cleaned_namd_cuda_install_result }}"
    dest: "{{benchmark_result_folder}}/namd_cuda_install_result.txt"


- name: Check that NAMD f1atpase.zip downloaded successfully
  stat:
    path: "{{ namd_test_folder }}/f1atpase.zip"
  register: NAMD_f1atpase_exists

- assert:
    that:
      - "NAMD_f1atpase_exists.stat.exists"

# Two tasks-openstack-core below need to be done manually because somehow the Phoronix's NAMD installation through ansible
# is not working properly, although it works if we do SSH manually and *initiate* the phoronix NAMD installation manually


- name: Prepare directory for NAMD testcase f1atpase.zip
  ansible.builtin.file:
    path: "{{ namd_test_folder }}/f1atpase"
    state: directory



- name: Check if NAMD f1atpase.zip need to be unzipped manually
  stat:
    path: "{{ namd_test_folder }}/f1atpase/f1atpase.namd"
  register: f1atpase_extracted_folder

- name: Extract NAMD testcase f1atpase.zip  #
  unarchive:
    src: "{{ namd_test_folder }}/f1atpase.zip"
    dest: "{{ namd_test_folder }}"
    remote_src: yes
  when: "not f1atpase_extracted_folder.stat.exists"

- name: run namd benchmark
  async: 10000
  poll: 5
  become: true
  expect:
    # average of 29 samples, each samples take 25.79310344827586 seconds. Total at least 14 mins for 30 tests
    timeout: 2100  #  sample size 28 means 15% Margin of Error at 90% certainty (at least for UX surveys) https://measuringu.com/sample-size-recommendations/
    command: "{{ prime_run }} env FORCE_TIMES_TO_RUN=30 DISPLAY=:0 {{ phoronix_test_suite }} benchmark namd-cuda 2>&1"
    responses:
      'Would you like to save these test results': 'n'
  register: namd_benchmark_result
#  retries: 10
#  delay: 5
#  until: "namd_benchmark_result.rc != 0 and 'fatal error' not in namd_benchmark_result.stdout.lower()"

- debug:
    msg: "{{namd_benchmark_result.rc != 0}}"
- debug:
    msg: "{{'fatal error' not in namd_benchmark_result.stdout.lower()}}"
- debug:
    msg: "{{namd_benchmark_result.stdout.lower()}}"

- set_fact:
    cleaned_namd_benchmark_result: "{{ namd_benchmark_result.stdout | regex_replace('\x1B\\[[0-9;]*[mK]', '') }}"
- name: write namd benchmark logs
  delegate_to: localhost
  copy:
    content: "{{ cleaned_namd_benchmark_result }}"
    dest: "{{benchmark_result_folder}}/namd_benchmark_result.txt"
