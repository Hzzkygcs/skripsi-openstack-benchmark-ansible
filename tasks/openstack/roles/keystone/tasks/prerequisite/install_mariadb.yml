---
- name: install mariadb
  apt:
    update_cache: yes
    name:
      - mariadb-server

- name: ensure mariadb is running
  become: true
  command: systemctl start mariadb.service

- name: Running mysql_secure_installation
  become: true
#  shell:  "echo -e \"{{ mariadb_root_password }}\\nn\\ny\\nn\\nn\\ny\\n\" | (mysql_secure_installation 2>&1)"
  shell:  "mysql_secure_installation 2>&1"
  args:
    stdin: "{{ mariadb_root_password }}\nn\ny\nn\nn\ny\n"
  timeout: 20
  register: mysql_secure_installation_result
  ignore_errors: true

#- name: running mysql_secure_installation
#  become: true
#  expect:
#    command: "mysql_secure_installation 2>&1"
#    timeout: 20
#    responses:
#      'Enter current password for root': "{{ mariadb_root_password }}"
#      'Change the root password': "n"
#      'Remove anonymous users': "y"
#      'Disallow root login remotely': "n"
#      'Remove test database and access to it': "n"  # not really important tho
#      'Reload privilege tables now': "y"  # not really important tho
#  ignore_errors: true
#  register: mysql_secure_installation_result

- delegate_to: localhost
  ansible.builtin.file:
    path: temp
    state: directory
    mode: '0777'

- delegate_to: localhost
  copy:
    content: "{{ mysql_secure_installation_result.stdout }}"
    dest: temp/mysql_secure_installation_result.txt

- name: assert mysql_secure_installation is success
  assert:
    that:
      - "mysql_secure_installation_result.rc == 0"

- name: assert mysql_secure_installation output is expected
  assert:
    that:
      - "'all done!' in (mysql_secure_installation_result.stdout | lower)"
      - "'installation should now be secure' in (mysql_secure_installation_result.stdout | lower)"
      - "'fail' not in (mysql_secure_installation_result.stdout | lower)"
      - "'error' not in (mysql_secure_installation_result.stdout | lower)"

